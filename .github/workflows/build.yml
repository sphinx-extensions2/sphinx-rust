# These jobs should be run only on commits to main and version tags.
# They test building wheels for all supported platforms and uploading them as artifacts.
# For version tags, they also publish the wheels to PyPI.

name: build-and-release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
        - x86_64
        - x86
        - aarch64
        - armv7
        - s390x
        - ppc64le
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist
      # - name: pytest
      #   if: ${{ startsWith(matrix.target, 'x86_64') }}
      #   shell: bash
      #   run: |
      #     set -e
      #     pip install --upgrade pip
      #     pip install sphinx_rust --find-links dist --force-reinstall
      #     pip install pytest pytest-param-files
      #     pytest
      # - name: pytest
      #   if: ${{ !startsWith(matrix.target, 'x86') && matrix.target != 'ppc64' }}
      #   uses: uraimo/run-on-arch-action@v2.5.0
      #   with:
      #     arch: ${{ matrix.target }}
      #     distro: ubuntu22.04
      #     githubToken: ${{ github.token }}
      #     install: |
      #       apt-get update
      #       apt-get install -y --no-install-recommends python3-dev python3-pip build-essential
      #       pip3 install -U pip pytest pytest-param-files
      #     run: |
      #       set -e
      #       pip3 install sphinx_rust --find-links dist --force-reinstall
      #       pytest

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist
      # - name: pytest
      #   if: ${{ !startsWith(matrix.target, 'aarch64') }}
      #   shell: bash
      #   run: |
      #     set -e
      #     pip install --upgrade pip
      #     pip install sphinx_rust --find-links dist --force-reinstall
      #     pip install pytest pytest-param-files
      #     pytest

  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist
      # - name: pytest
      #   if: ${{ !startsWith(matrix.target, 'aarch64') }}
      #   shell: bash
      #   run: |
      #     set -e
      #     pip install --upgrade pip
      #     pip install sphinx_rust --find-links dist --force-reinstall
      #     pip install pytest pytest-param-files
      #     pytest

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  release:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
